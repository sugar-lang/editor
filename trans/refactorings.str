module refactorings

imports
  lib/refactor-common.generated
  include/SugarJ
  lib/editor-common.generated  

strategies //renaming
 
rename-entity:
  (selected, position, ast, path, project-path) -> (ast, new-ast)
  with  	
    old-name:=<get-selected-name(|position)> ast;
    new-name:=<input-dialog>("rename", "Rename Entity:", ""); 
    new-ast:=<topdown(try(rename-type(|old-name, new-name)))> ast

get-selected-name(|position):
  ast -> name
    where
	  <term-at-position(|position); ?Type(name)> ast <+
	  <parent-at-position(|position); ?Entity(name, _)> ast 

rename-type(|old-name, new-name):
  Entity(old-name, y) -> Entity(new-name, y)

rename-type(|old-name, new-name):
  Type(old-name) -> Type(new-name)
	
  
strategies //extraction

extract-entity:
  (selected, position, ast, path, project-path) -> (ast, new-ast)
  with
    if <is-list> selected then
  	  properties:= selected;
  	  insert-position:=<init; at-last(map(inc))> position
    else //single property selected
  	  properties:=<![selected]>;
  	  insert-position:=<init; init; at-last(map(inc))> position
    end;
    entity-name:=<input-dialog>("extract", "Extract Entity:", "<Entity Name>");
    prop-name:=<lower-case> entity-name;
    new-ast:=<
      alltd(replace-sublist(?properties|[Property(prop-name, entity-name)]));
      insert-elem(|insert-position, Entity(entity-name, properties))
    > ast	

